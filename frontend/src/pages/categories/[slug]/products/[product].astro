---
import { handleServerRequest } from '@/utils/server';
import ThemePage from '@/components/ThemePage.astro';
import { parseResources } from '@/utils/server-resources';

import type { Swell } from '@swell/apps-sdk';

import { getData as getCategoryData } from '../index.astro';
import { getData as getProductData } from '../../../products/[slug].astro';

export async function getData(swell: Swell, categorySlug?: string, productSlug?: string) {
  const [categoryData, productData] = await Promise.all([
    getCategoryData(swell, categorySlug),
    getProductData(swell, productSlug),
  ]);

  // Resolve category to see if it exists
  const category = await categoryData.category?.resolve();
  if (!category?.id) {
    // TODO: figure out how to redirect to /products page if category not found
  }

  return {
    ...productData,
    ...categoryData,
  };
}

export const getJSON = handleServerRequest(async ({ swell, context }) => {
  const data = await getData(swell, context.params.slug, context.params.product);
  return parseResources(data);
});
---

<ThemePage
  id="products/product"
  required="product.id"
  title="{{ product.meta_title | default: product.name }}"
  description="{{ product.meta_description | default: product.description }}"
  getData={(swell: Swell) => getData(swell,  Astro.params.slug, Astro.params.product)}
/>
